<Window x:Class="PaintAnalog.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:PaintAnalog.ViewModels"
        Title="{Binding Title}" Height="800" Width="1200"
        WindowState="Maximized"
        WindowStyle="SingleBorderWindow">
    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="ToolBarButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="10,5"/>
        </Style>
        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
    </Window.Resources>
    <DockPanel>
        <DockPanel.InputBindings>
            <KeyBinding Key="Z" Modifiers="Control" Command="{Binding UndoCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" />
            <KeyBinding Key="Y" Modifiers="Control" Command="{Binding RedoCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" />
        </DockPanel.InputBindings>
        <ToolBar DockPanel.Dock="Top">
            <Button x:Name="FileButton" Content="File" Style="{StaticResource ToolBarButtonStyle}" Tag="{Binding ElementName=PaintCanvas}" Click="FileButton_Click">
                <Button.ContextMenu>
                    <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                        <MenuItem Header="Save" 
                      Command="{Binding SaveCanvasCommand}" 
                      CommandParameter="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />

                        <MenuItem Header="Open" 
                      Command="{Binding OpenImageCommand}" 
                      CommandParameter="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <Button Content="Tools" Click="OpenToolsWindow" Style="{StaticResource ToolBarButtonStyle}" />
            <Button Content="Clear" Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
            <Button Content="Choose color" Command="{Binding ChooseColorCommand}" Style="{StaticResource ToolBarButtonStyle}" />
            <Button Content="Enter text" Command="{Binding InsertTextCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
            <Button Content="Insert Image" Command="{Binding InsertImageCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
            <Button Content="Confirm Changes" Command="{Binding ConfirmChangesCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
            <Button Content="Undo" Command="{Binding UndoCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
            <Button Content="Redo" Command="{Binding RedoCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
            <Button x:Name="SettingsButton" Content="Brush Settings" Click="OpenPenSettings" Style="{StaticResource ToolBarButtonStyle}" />
            <Button Content="Resize Canvas" Click="ResizeCanvas" Style="{StaticResource ToolBarButtonStyle}" />
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock Text="Text Size:" Margin="5,0,5,0" VerticalAlignment="Center"/>
                <Slider Minimum="8" Maximum="96" Value="{Binding TextSize, UpdateSourceTrigger=PropertyChanged}" Width="150" />
                <TextBlock Text="{Binding TextSize}" Margin="5,0,10,0" VerticalAlignment="Center" />
                <ComboBox Width="150" SelectedItem="{Binding SelectedFontFamily}">
                    <ComboBox.ItemsSource>
                        <CompositeCollection>
                            <FontFamily>Segoe UI</FontFamily>
                            <FontFamily>Arial</FontFamily>
                            <FontFamily>Times New Roman</FontFamily>
                            <FontFamily>Comic Sans MS</FontFamily>
                        </CompositeCollection>
                    </ComboBox.ItemsSource>
                </ComboBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0,0,0">
                <ToggleButton Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding IsBold}" ToolTip="Bold (Ctrl+B)">
                    <TextBlock Text="B" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" />
                </ToggleButton>
                <ToggleButton Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding IsItalic}" ToolTip="Italic (Ctrl+I)">
                    <TextBlock Text="I" FontStyle="Italic" VerticalAlignment="Center" HorizontalAlignment="Center" />
                </ToggleButton>
                <ToggleButton Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding IsUnderline}" ToolTip="Underline (Ctrl+U)">
                    <TextBlock Text="U" TextDecorations="Underline" VerticalAlignment="Center" HorizontalAlignment="Center" />
                </ToggleButton>
            </StackPanel>
        </ToolBar>
        <ScrollViewer x:Name="CanvasScrollViewer" 
              HorizontalScrollBarVisibility="Auto" 
              VerticalScrollBarVisibility="Auto" 
              Background="Gray">
            <Grid>
                <Canvas x:Name="PaintCanvas" Background="White" Width="1200" Height="800"
                HorizontalAlignment="Left" VerticalAlignment="Top" ClipToBounds="True"
                MouseDown="Canvas_MouseDown"
                MouseMove="Canvas_MouseMove"
                MouseUp="Canvas_MouseUp"      
                MouseWheel="Canvas_MouseWheel">
                    <Canvas.LayoutTransform>
                        <ScaleTransform x:Name="CanvasScaleTransform" />
                    </Canvas.LayoutTransform>
                </Canvas>
                <Canvas Name="CursorOverlayCanvas" IsHitTestVisible="False"/>
            </Grid>
        </ScrollViewer>
    </DockPanel>
</Window>