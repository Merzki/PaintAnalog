<Window x:Class="PaintAnalog.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:PaintAnalog.ViewModels"
        Title="{Binding Title}" Height="800" Width="1200"
        WindowState="Maximized"
        WindowStyle="SingleBorderWindow">
    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="ToolBarButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="15,5"/>
            <Setter Property="Background" Value="#FFDDDDDD"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="6"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFB0C4DE"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFA0B0C0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#FFEEEEEE"/>
                                <Setter Property="Foreground" Value="#FFAAAAAA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="#FFEEEEEE"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="6"
                        BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFDDEEFF"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFAACCEE"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#FFF0F0F0"/>
                                <Setter Property="Foreground" Value="#FFAAAAAA"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontFamily="{Binding}" FontSize="14" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        </Style>

    </Window.Resources>
    <DockPanel>
        <DockPanel.InputBindings>
            <KeyBinding Key="Z" Modifiers="Control" Command="{Binding UndoCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" />
            <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyLastImageCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" />
            <KeyBinding Key="V" Modifiers="Control" Command="{Binding PasteImageCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" />
            <KeyBinding Key="Y" Modifiers="Control" Command="{Binding RedoCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" />
            <KeyBinding Key="S" Modifiers="Control" Command="{Binding ConfirmChangesCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" />
        </DockPanel.InputBindings>
        <ToolBarTray DockPanel.Dock="Top" Background="LightGray">
            <ToolBar Height="100" Background="WhiteSmoke">
                <GroupBox Header="File &amp; Canvas" Margin="5">
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="FileButton" Content="File" Style="{StaticResource ToolBarButtonStyle}" Tag="{Binding ElementName=PaintCanvas}" Click="FileButton_Click">
                            <Button.ContextMenu>
                                <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Save" 
                      Command="{Binding SaveCanvasCommand}" 
                      CommandParameter="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                    <MenuItem Header="Open" 
                      Command="{Binding OpenImageCommand}" 
                      CommandParameter="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                        <Button Content="Clear" Command="{Binding ClearCanvasCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
                        <Button Content="Resize Canvas" Click="ResizeCanvas" Style="{StaticResource ToolBarButtonStyle}" />
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="Undo / Redo &amp; Confirm" Margin="5">
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Undo" Command="{Binding UndoCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
                        <Button Content="Redo" Command="{Binding RedoCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
                        <Button Content="Confirm Changes" Command="{Binding ConfirmChangesCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="Tools" Margin="5">
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Tools" Click="OpenToolsWindow" Style="{StaticResource ToolBarButtonStyle}" />
                        <Button Content="Insert Image" Command="{Binding InsertImageCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
                        <Button Content="Enter text" Command="{Binding InsertTextCommand}" CommandParameter="{Binding ElementName=PaintCanvas}" Style="{StaticResource ToolBarButtonStyle}" />
                        <Button x:Name="SettingsButton" Content="Brush Settings" Click="OpenPenSettings" Style="{StaticResource ToolBarButtonStyle}" />
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="Text Settings" Margin="5">
    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
        <TextBlock Text="Size:" Margin="5,0" VerticalAlignment="Center"/>
        <TextBox Width="50"
         Style="{StaticResource TextBoxStyle}"
         Text="{Binding TextSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
         PreviewTextInput="OnlyNumbers_PreviewTextInput"
         DataObject.Pasting="OnlyNumbers_OnPaste" />
            <TextBlock Text="px" Margin="0,0,10,0" VerticalAlignment="Center"/>
        <ComboBox Width="130" Height="25"
          Style="{StaticResource ComboBoxStyle}"
          SelectedItem="{Binding SelectedFontFamily}">
            <ComboBox.ItemsSource>
                <CompositeCollection>
                    <FontFamily>Segoe UI</FontFamily>
                    <FontFamily>Arial</FontFamily>
                    <FontFamily>Times New Roman</FontFamily>
                    <FontFamily>Comic Sans MS</FontFamily>
                </CompositeCollection>
            </ComboBox.ItemsSource>
        </ComboBox>
        <ToggleButton Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding IsBold}" ToolTip="Bold (Ctrl+B)">
            <TextBlock Text="B" FontWeight="Bold" />
        </ToggleButton>
        <ToggleButton Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding IsItalic}" ToolTip="Italic (Ctrl+I)">
            <TextBlock Text="I" FontStyle="Italic" />
        </ToggleButton>
        <ToggleButton Style="{StaticResource ToggleButtonStyle}" IsChecked="{Binding IsUnderline}" ToolTip="Underline (Ctrl+U)">
            <TextBlock Text="U" TextDecorations="Underline" />
        </ToggleButton>
    </StackPanel>
</GroupBox>

                <GroupBox Header="Color" Margin="5">
                    <Button Content="Choose color" Command="{Binding ChooseColorCommand}" Style="{StaticResource ToolBarButtonStyle}" />
                </GroupBox>
            </ToolBar>
        </ToolBarTray>
        <ScrollViewer x:Name="CanvasScrollViewer" 
              HorizontalScrollBarVisibility="Auto" 
              VerticalScrollBarVisibility="Auto" 
              Background="Gray">
            <Grid>
                <Canvas x:Name="PaintCanvas" Background="White" Width="1200" Height="800"
                HorizontalAlignment="Left" VerticalAlignment="Top" ClipToBounds="True" Focusable="True"
                MouseDown="Canvas_MouseDown"
                MouseMove="Canvas_MouseMove"
                MouseUp="Canvas_MouseUp"      
                MouseWheel="Canvas_MouseWheel">
                    <Canvas.LayoutTransform>
                        <ScaleTransform x:Name="CanvasScaleTransform" />
                    </Canvas.LayoutTransform>
                </Canvas>
                <Canvas Name="CursorOverlayCanvas" IsHitTestVisible="False"/>
            </Grid>
        </ScrollViewer>
    </DockPanel>
</Window>